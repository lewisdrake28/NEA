
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.18.0
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace FINAL
{
    using System;
    using Terminal.Gui;


    public partial class MyView : Window
    {

        private Label label, label1, label2;

        private Button button, button1, button2;

        private TextView textView;

        private TextField textField;

        private Button CreateButton(int width, int height, int x, int y, string data, string text, char textAlignment, bool isDefualt)
        {
            Button button = new Button();

            button.Width = width;
            button.Height = height;
            button.X = Pos.Center() + x;
            button.Y = Pos.Center() + y;
            button.Data = data;
            button.Text = text;
            switch (textAlignment)
            {
                case ('l'):
                    button.TextAlignment = TextAlignment.Left;
                    break;
                case ('r'):
                    button.TextAlignment = TextAlignment.Right;
                    break;
                case ('j'):
                    button.TextAlignment = TextAlignment.Justified;
                    break;
                case ('c'):
                    button.TextAlignment = TextAlignment.Centered;
                    break;
            }
            button.IsDefault = isDefualt;

            return button;
        }

        private Label CreateLabel(int width, int height, int x, int y, string data, string text, char textAlignment)
        {
            Label label = new Label();

            label.Width = width;
            label.Height = height;
            label.X = Pos.Center() + x;
            label.Y = Pos.Center() + y;
            label.Data = data;
            label.Text = text;
            switch (textAlignment)
            {
                case ('l'):
                    label.TextAlignment = TextAlignment.Left;
                    break;
                case ('r'):
                    label.TextAlignment = TextAlignment.Right;
                    break;
                case ('j'):
                    label.TextAlignment = TextAlignment.Justified;
                    break;
                case ('c'):
                    label.TextAlignment = TextAlignment.Centered;
                    break;
            }

            return label;
        }

        private void InitializeComponent()
        {
            var menu = new MenuBar(new MenuBarItem[] {
            new MenuBarItem ("_File", new MenuItem [] {
                new MenuItem ("_Quit", "", () => {
                    Application.RequestStop ();
                })
            }),
        });

            Add(menu);
        }
    }
}
